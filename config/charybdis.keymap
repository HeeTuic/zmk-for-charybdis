#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        escc {
            bindings = <&kp ESC>;
            key-positions = <17 18>;
        };
    };

    behaviors {
        homerow: homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&trans  &trans                 &trans            &trans               &trans               &trans         &trans           &trans                &trans                &trans            &trans                     &trans
&trans  &kp Q                  &kp W             &kp E                &kp R                &kp T          &kp Y            &kp U                 &kp I                 &kp O             &kp P                      &trans
&trans  &homerow LEFT_SHIFT A  &homerow LCTRL S  &homerow LEFT_ALT D  &homerow LEFT_WIN F  &kp G          &kp H            &homerow RIGHT_WIN J  &homerow RIGHT_ALT K  &homerow RCTRL L  &homerow RIGHT_SHIFT SEMI  &trans
&trans  &kp Z                  &kp X             &kp C                &kp V                &kp B          &kp N            &kp M                 &kp COMMA             &kp DOT           &kp FSLH                   &trans
                                                 &lt 3 ESC            &lt 2 TAB            &lt 1 SPACE    &lt 2 BACKSPACE  &lt 2 ENTER
                                                                      &trans               &trans         &trans
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans      &trans        &trans   &trans       &trans           &trans         &trans        &trans        &trans        &trans         &trans
&trans  &kp N6      &kp N7        &kp N8   &kp N9       &kp N0           &kp LS(EXCL)   &kp LBKT      &kp RBKT      &kp LS(STAR)  &kp LS(AMPS)   &trans
&trans  &kp N1      &kp N2        &kp N3   &kp N4       &kp N5           &kp EQUAL      &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(PLUS)  &kp LS(PRCNT)  &trans
&trans  &kp LS(AT)  &kp LS(DLLR)  &kp SQT  &kp LS(DQT)  &kp LS(POUND)    &kp LS(UNDER)  &kp LS(LBRC)  &kp LS(RBRC)  &kp MINUS     &kp BSLH       &trans
                                  &trans   &trans       &trans           &trans         &trans
                                           &trans       &trans           &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans    &trans             &trans        &trans        &trans        &trans      &trans
&trans  &trans  &trans     &trans     &trans     &trans    &trans             &trans        &trans        &trans        &trans      &trans
&trans  &trans  &mkp MCLK  &mkp LCLK  &mkp LCLK  &trans    &trans             &trans        &trans        &trans        &trans      &trans
&trans  &trans  &trans     &trans     &trans     &trans    &ext_power EP_OFF  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &trans
                           &trans     &trans     &trans    &trans             &trans
                                      &trans     &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;
        };
    };
};
