#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
};

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <31 32>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <32 33>;
        };

        scroll {
            bindings = <&mo 4>;
            key-positions = <31 32 33>;
        };
    };

    behaviors {
        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <34>;
            tapping-term-ms = <100>;
        };
    };

    macros {
        quicker: quicker {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LCTRL>, <&macro_press>;

            label = "QUICKER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC         &kp N1   &kp N2   &kp N3    &kp N4        &kp N5    &kp N6     &kp N7         &kp N8     &kp N9      &kp N0       &kp BSPC
&kp TAB         &kp Q    &kp W    &kp E     &kp R         &kp T     &kp Y      &kp U          &kp I      &kp O       &kp P        &kp BSLH
&kp LCTRL       &kp A    &kp S    &kp D     &kp F         &kp G     &kp H      &kp J          &kp K      &kp L       &kp SEMI     &kp APOS
&kp LEFT_SHIFT  &lt 3 Z  &lt 5 X  &kp C     &kp V         &kp B     &kp N      &kp M          &kp COMMA  &kp PERIOD  &lt 3 SLASH  &kp RSHFT
                                  &kp LGUI  &kp SPACE     &mo 4     &kp ENTER  &kp BACKSPACE
                                            &kp LEFT_ALT  &mo 1     &mo 2
            >;
        };

        layer_1 {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&none      &none            &none        &none         &none       &none          &none      &kp MINUS       &kp EQUAL     &kp LBKT              &kp RBKT               &kp PIPE
&none      &kp LEFT         &kp DOWN     &kp UP_ARROW  &kp RIGHT   &quicker       &none      &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &none
&none      &none            &none        &none         &none       &none          &none      &none           &none         &none                 &none                  &none
                                         &none         &none       &trans         &none      &trans
                                                       &none       &none          &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F12     &kp F1    &kp F2        &kp F3          &kp F4           &kp F5    &kp F6  &kp F7           &kp F8     &kp F9         &kp F10        &kp F11
&kp C_NEXT  &none     &none         &none           &none            &none     &none   &none            &none      &none          &none          &kp C_VOL_UP
&kp C_PLAY  &kp LEFT  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none     &none   &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_WIN  &kp K_MUTE
&kp C_PREV  &none     &none         &none           &none            &none     &none   &none            &none      &none          &none          &kp C_VOL_DN
                                    &trans          &trans           &none     &trans  &none
                                                    &trans           &trans    &none
            >;
        };

        Mouse {
            bindings = <
&none  &none  &none  &none      &none      &none          &none         &none         &none         &none  &none  &none
&none  &none  &none  &none      &none      &bootloader    &bootloader   &bt BT_CLR    &none         &none  &none  &none
&none  &none  &none  &none      &none      &none          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none  &none
&none  &none  &none  &none      &none      &none          &none         &none         &none         &none  &none  &none
                     &mkp RCLK  &mkp LCLK  &mkp MCLK      &none         &none
                                &none      &none          &none
            >;
        };

        Scroll {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };

        Snipe {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };
    };
};
